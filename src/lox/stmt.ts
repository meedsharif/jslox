/* generated by generateAst.ts */

import { Token } from './token';
import { Expr } from './expr';
class Stmt {
  accept (visitor: any) {}
}

class Expression extends Stmt {
  public expression: Expr;
  constructor (expression: Expr) {
    super()
    this.expression = expression;
  }

  accept (visitor: any) {
    return visitor.visitExpressionStmt(this)
  }
}

class Print extends Stmt {
  public expression: Expr;
  constructor (expression: Expr) {
    super()
    this.expression = expression;
  }

  accept (visitor: any) {
    return visitor.visitPrintStmt(this)
  }
}

class Var extends Stmt {
  public name: Token;
  public initializer: Expr;
  constructor (name: Token, initializer: Expr) {
    super()
    this.name = name;
    this.initializer = initializer;
  }

  accept (visitor: any) {
    return visitor.visitVarStmt(this)
  }
}

export {
  Expression,
  Print,
  Var,
  Stmt
}
